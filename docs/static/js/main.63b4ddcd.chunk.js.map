{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GiftExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BACIC,SAZa,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC3BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAc,OASb,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAD,IAAtBL,IAAKE,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,0CACX,yBACIC,IAAKf,EACLgB,IAAKN,IAET,2BAAIA,KCNHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAW,WACPxB,EAAQC,GAEHwB,MAAK,SAAAC,GAEFC,YAAY,WACRJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAGb,CAACpB,IAEIqB,EDnB0BM,CAAa3B,GAAhCa,EAFqB,EAE3BN,KAAca,EAFa,EAEbA,QAItB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,2CAEZ,yBAAKJ,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACP,kBAAC,EAAD,CACIkB,IAAKlB,EAAIC,GACTD,IAAOA,UESxBmB,EA3BO,SAAAC,GAAU,IAAD,EAES5C,mBAAS,CAAC,SAFnB,mBAEpB6C,EAFoB,KAER9C,EAFQ,KAI3B,OACI,oCACI,6CACA,kBAAC,EAAD,CACIA,cAAgBA,IAEpB,6BAEA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,U,MChBtCgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.63b4ddcd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length >2){\r\n           setCategories( cats =>[inputValue,...cats]) \r\n           setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\nexport const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=rjZPECTloxHfg4Fp6VAlzzL11xEH3fSD`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img:{title, url}}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img \r\n                src={url}\r\n                alt={title}\r\n            />\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data: images, loading} = useFetchGifs(category);\r\n\r\n    // console.log(loading)\r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n\r\n            {loading && <p>Cargando ...</p>}\r\n           \r\n            <div className='card-grid'>\r\n                \r\n                {\r\n                    images.map( img =>(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                img = {img}\r\n                            /> \r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect( () =>{\r\n        getGifs(category)\r\n        // .then(imgs => setImages(imgs)); // es igual al comando de abajo\r\n            .then(imgs =>{ \r\n\r\n                setTimeout( () =>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                        })\r\n                }, 1000);\r\n            });\r\n    \r\n    },[category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['Goku']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory\r\n                setCategories= {setCategories}\r\n            />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}